{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Owner\\\\Desktop\\\\COMP SCI\\\\test_app\\\\test_app\\\\src\\\\App.jsx\";\nimport './App.css';\nimport io from \"socket.io-client\";\nimport { useEffect, useState } from 'react';\nimport { BrowserRouter, Routes, Route, createHashRouter } from 'react-router-dom';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io.connect(\"http://localhost:3001\");\nfunction App() {\n  var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  var ACCESS = false;\n  function Chatroom() {\n    _s();\n    const MAX_SIZE = 6;\n    const [message, setMessage] = useState(\"\");\n    const [messageRecv, setMessageRecv] = useState(\"\");\n    const {\n      state\n    } = useLocation();\n    const username = state.room;\n    function sendMessage() {\n      updateScreen(message, username, \"SENDER\");\n      socket.emit(\"SEND_MESSAGE\", {\n        message,\n        username\n      });\n    }\n    function delete_first_node(parent, lst) {\n      var first = lst[0];\n      parent.removeChild(first);\n    }\n\n    // Updates the chat list and colors based on sender and/ or receiver\n    function updateScreen(message, username, flag) {\n      const LIST = document.getElementById(\"messageListId\");\n      var LI = document.createElement(\"li\");\n      LI.innerHTML = `[${username}] ${message}`;\n      var count = 0;\n      for (var child of LIST.children) {\n        var bottom = child.getBoundingClientRect().bottom;\n        if (count++ >= MAX_SIZE || bottom >= 515) {\n          delete_first_node(LIST, LIST.children);\n        }\n      }\n      LIST.appendChild(LI);\n    }\n    useEffect(() => {\n      socket.on(\"RECEIVE_MESSAGE\", data => {\n        setMessageRecv(data.message);\n        updateScreen(data.message, data.username);\n      });\n    }, [socket]);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messageContainer\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"messageListClass\",\n            id: \"messageListId\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messageBar\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"messageInputBar\",\n            placeholder: \"Message...\",\n            onChange: event => {\n              setMessage(event.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"sendButton\",\n            onClick: sendMessage,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }, this)\n    }, void 0, false);\n  }\n  _s(Chatroom, \"tvCNMopF0yNAJd6qlpyATSYLhfU=\", false, function () {\n    return [useLocation];\n  });\n  function LoginScreen() {\n    _s2();\n    var navigate = useNavigate();\n    var [typedUser, setUsername] = useState(\"\");\n    var [typedRoom, setRoom] = useState(\"\");\n    function validateLogin() {\n      navigate(\"/Chatroom\", {\n        state: {\n          room: typedRoom\n        }\n      });\n    }\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"backgroundWrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"titlePage\",\n          children: \"Willamette.io\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"usernameDiv\",\n        id: \"usernameDivId\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Name\",\n          id: \"usernameInputId\",\n          onChange: event => {\n            setUsername(event.target.value);\n          },\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"roomNameDiv\",\n        id: \"roomNameDivId\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Room\",\n          id: \"roomInputId\",\n          onChange: event => {\n            setRoom(event.target.value);\n          },\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"signinDiv\",\n        id: \"signinDivId\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"signinButtonId\",\n          type: \"submit\",\n          onClick: () => {\n            validateLogin();\n          },\n          children: \"Join\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n  _s2(LoginScreen, \"IqWMSGtKBz+NNXx/umbiQ9HeAkw=\", false, function () {\n    return [useNavigate];\n  });\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(LoginScreen, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/Chatroom\",\n        element: /*#__PURE__*/_jsxDEV(Chatroom, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["io","useEffect","useState","BrowserRouter","Routes","Route","createHashRouter","useNavigate","useLocation","socket","connect","App","ACCESS","Chatroom","MAX_SIZE","message","setMessage","messageRecv","setMessageRecv","state","username","room","sendMessage","updateScreen","emit","delete_first_node","parent","lst","first","removeChild","flag","LIST","document","getElementById","LI","createElement","innerHTML","count","child","children","bottom","getBoundingClientRect","appendChild","on","data","event","target","value","LoginScreen","navigate","typedUser","setUsername","typedRoom","setRoom","validateLogin"],"sources":["C:/Users/Owner/Desktop/COMP SCI/test_app/test_app/src/App.jsx"],"sourcesContent":["import './App.css';\nimport io from \"socket.io-client\"\nimport {useEffect, useState} from 'react'\nimport {BrowserRouter, Routes, Route, createHashRouter} from 'react-router-dom';\nimport { useNavigate, useLocation } from 'react-router-dom';\nconst socket = io.connect(\"http://localhost:3001\")\n\n\n\n\nfunction App() {\n  var ACCESS = false\n\n  function Chatroom()\n{\n  const MAX_SIZE = 6;\n  const [message, setMessage] = useState(\"\");\n  const [messageRecv, setMessageRecv] = useState(\"\");\n  const {state} = useLocation()\n  const username = state.room\n\n  function sendMessage()\n  {\n    updateScreen(message, username, \"SENDER\");\n    socket.emit(\"SEND_MESSAGE\", { message, username });\n  }\n\n  function delete_first_node(parent, lst)\n  {\n    var first = lst[0];\n    parent.removeChild(first);\n  }\n\n\n  // Updates the chat list and colors based on sender and/ or receiver\n  function updateScreen(message, username, flag)\n  {\n    const LIST = document.getElementById(\"messageListId\");\n    var LI = document.createElement(\"li\");\n    LI.innerHTML = `[${username}] ${message}`;\n\n    var count = 0;\n    for (var child of LIST.children)\n    {\n      var bottom = child.getBoundingClientRect().bottom;\n      if (count++ >= MAX_SIZE || bottom >= 515)\n      {\n        delete_first_node(LIST, LIST.children)\n      }\n    }\n    \n\n    LIST.appendChild(LI);\n  }\n\n\n  useEffect(() => {\n    socket.on(\"RECEIVE_MESSAGE\", (data) => {\n      setMessageRecv(data.message);\n      updateScreen(data.message, data.username);\n    })\n  }, [socket])\n\n  return (\n    <>      \n    <div className='App'>\n        <div className=\"messageContainer\">\n            <ul className=\"messageListClass\" id=\"messageListId\"></ul>\n          </div>\n\n          <div className=\"messageBar\">\n            <input className=\"messageInputBar\" placeholder=\"Message...\" onChange={ (event) => {\n              setMessage(event.target.value);\n            }}></input>\n            <button className=\"sendButton\" onClick={sendMessage}>Send</button>\n        </div>\n    </div>\n    </>\n  )\n  }\n\n  function LoginScreen()\n  {\n    var navigate = useNavigate();\n    var [typedUser, setUsername] = useState(\"\");\n    var [typedRoom, setRoom] = useState(\"\");\n\n    function validateLogin()\n    {\n      navigate(\"/Chatroom\", { state: {room : typedRoom }})\n    }\n\n    return (\n      <>\n        <div class=\"backgroundWrapper\"><div id=\"titlePage\">Willamette.io</div></div>\n        <div className=\"usernameDiv\" id=\"usernameDivId\">\n            <input placeholder='Name' id=\"usernameInputId\" onChange={(event) => {\n              setUsername(event.target.value);\n            }} required></input>\n        </div>\n\n        <div className=\"roomNameDiv\" id=\"roomNameDivId\">\n            <input placeholder='Room' id=\"roomInputId\" onChange={(event) => {\n              setRoom(event.target.value);\n            }} required></input>\n        </div>\n\n        <div className=\"signinDiv\" id=\"signinDivId\">\n          <button id=\"signinButtonId\" type='submit' onClick={() => {validateLogin()}}>Join</button>\n        </div>\n      </>\n\n    )\n  }\n\n\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/\" element={<LoginScreen />} />\n        <Route path=\"/Chatroom\" element={<Chatroom />} />\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
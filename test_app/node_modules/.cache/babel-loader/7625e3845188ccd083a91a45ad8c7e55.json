{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Owner\\\\Desktop\\\\COMP SCI\\\\test_app\\\\test_app\\\\src\\\\App.jsx\";\nimport './App.css';\nimport io from \"socket.io-client\";\nimport { useEffect, useState } from 'react';\nimport { BrowserRouter, Routes, Route, createHashRouter } from 'react-router-dom';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { get, getDatabase, ref, set, child, onValue } from \"firebase/database\";\nimport { sha256 } from 'js-sha256';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io.connect(\"http://localhost:3001\");\n\n/* ######################## Firebase Setup ########################*/\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBUmj5104Hb8QA9yvCUv_dxk-76aTlhvB8\",\n  authDomain: \"willamettemajorchatroom.firebaseapp.com\",\n  projectId: \"willamettemajorchatroom\",\n  storageBucket: \"willamettemajorchatroom.appspot.com\",\n  messagingSenderId: \"1084318268943\",\n  appId: \"1:1084318268943:web:549f018da09d0c66f42d7a\",\n  measurementId: \"G-GEN5KBHKVJ\"\n};\nconst app = initializeApp(firebaseConfig);\nconst analytics = getAnalytics(app);\n\n/* sha256 hash function */\nfunction CREATE_HASH(password) {\n  var hash = sha256.create();\n  hash.update(password);\n  return hash.hex();\n}\n_c = CREATE_HASH;\nfunction App() {\n  var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  var ACCESS = false;\n  function Chatroom() {\n    _s();\n    const MAX_SIZE = 6;\n    const [message, setMessage] = useState(\"\");\n    const [messageRecv, setMessageRecv] = useState(\"\");\n    const {\n      state\n    } = useLocation();\n    const username = state.username;\n    function sendMessage() {\n      updateScreen(message, username, \"SENDER\");\n      socket.emit(\"SEND_MESSAGE\", {\n        message,\n        username\n      });\n    }\n    function delete_first_node(parent, lst) {\n      var first = lst[0];\n      parent.removeChild(first);\n    }\n\n    // Updates the chat list and colors based on sender and/ or receiver\n    function updateScreen(message, username, flag) {\n      const LIST = document.getElementById(\"messageListId\");\n      var LI = document.createElement(\"li\");\n      LI.innerHTML = `[${username}] ${message}`;\n      var count = 0;\n      for (var child of LIST.children) {\n        var bottom = child.getBoundingClientRect().bottom;\n        if (count++ >= MAX_SIZE || bottom >= 515) {\n          delete_first_node(LIST, LIST.children);\n        }\n      }\n      LIST.appendChild(LI);\n    }\n    useEffect(() => {\n      socket.on(\"RECEIVE_MESSAGE\", data => {\n        setMessageRecv(data.message);\n        updateScreen(data.message, data.username);\n      });\n    }, [socket]);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messageContainer\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"messageListClass\",\n            id: \"messageListId\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messageBar\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"messageInputBar\",\n            placeholder: \"Message...\",\n            onChange: event => {\n              setMessage(event.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"sendButton\",\n            onClick: sendMessage,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 5\n      }, this)\n    }, void 0, false);\n  }\n  _s(Chatroom, \"tvCNMopF0yNAJd6qlpyATSYLhfU=\", false, function () {\n    return [useLocation];\n  });\n  function LoginScreen() {\n    _s2();\n    var navigate = useNavigate();\n    var [typedUser, setUsername] = useState(\"\");\n    var [typedPassword, setPassword] = useState(\"\");\n    function validateLogin() {\n      /* Retrieve from database and validate login info */\n      const db = getDatabase(app);\n      const dbRef = ref(db, \"users/\" + typedUser);\n      onValue(dbRef, snapshot => {\n        const databaseResponse = snapshot.val();\n        if (databaseResponse) {\n          var databasePassword = databaseResponse.password;\n          const attemptedPassword = CREATE_HASH(typedPassword);\n          if (databasePassword === attemptedPassword) {\n            ACCESS = true;\n            navigate(\"/Chatroom\", {\n              state: {\n                username: typedUser\n              }\n            });\n          } else {\n            alert(\"Username or Password is incorrect\");\n          }\n        } else {\n          alert(\"Username or Password is incorrect\");\n        }\n      });\n    }\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"usernameDiv\",\n        id: \"usernameDivId\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Username\",\n          id: \"usernameInputId\",\n          onChange: event => {\n            setUsername(event.target.value);\n          },\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"passwordDiv\",\n        id: \"passwordDivId\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Password\",\n          id: \"passwordInputId\",\n          onChange: event => {\n            setPassword(event.target.value);\n          },\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"signinDiv\",\n        id: \"signinDivId\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"signinButtonId\",\n          type: \"submit\",\n          onClick: () => {\n            !typedUser || !typedPassword ? alert(\"Enter username/password\") : validateLogin();\n          },\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"registerDiv\",\n        id: \"registerDivId\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"registerButtonId\",\n          onClick: () => {\n            navigate(\"/register\");\n          },\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true);\n  }\n\n  /*\n    function Register()\n    {\n      var navigate = useNavigate();\n      var [registerUsername, setUsername] = useState(\"\")\n      var [registerPassword, setPassword] = useState(\"\")\n  \n       createUser() pushes a username and password to the firebase database \n      function createUser() {\n        const db = getDatabase();\n        const dbRef = ref(db)\n  \n         Retrieving user data and checking to see if the typed username already exists \n        get(child(dbRef, \"users\"))\n        .then((snapshot) => {\n  \n            var users = []\n            snapshot.forEach(snap => {\n              var user = snap.val().username;\n              users.push(user)\n            })\n            \n            var access_token = true\n            users.map((user) => {\n              if (user == registerUsername)\n              {\n                access_token = false\n                alert(\"User already exists!\")\n              }\n            })\n  \n            if (access_token)\n            {\n              var hashed_password = CREATE_HASH(registerPassword)\n              set(ref(db, 'users/' + registerUsername), {\n                username: registerUsername,\n                password: hashed_password\n              });\n              navigate(\"/\")\n            }\n            \n        })\n      }\n  \n  \n      return (\n        <>\n          <div className=\"usernameDiv\" id=\"registerUsernameDiv\">\n                <input placeholder='Username' onChange={(event) => {setUsername(event.target.value);}} required></input>\n            </div>\n  \n            <div className=\"passwordDiv\" id=\"registerPasswordDivId\">\n                <input placeholder='Password' onChange={(event) => {setPassword(event.target.value);}} required></input>\n            </div>\n  \n            <div className=\"signinDiv\" id=\"signinDivId\">\n              <button id=\"signinButtonId\" type='submit' onClick={() => {createUser()}}>Submit</button>\n          </div>\n        </>\n      )\n    }\n  */\n  _s2(LoginScreen, \"kra07zes3P7Rpa3Kwya9JdbDni4=\", false, function () {\n    return [useNavigate];\n  });\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(LoginScreen, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/Chatroom\",\n        element: /*#__PURE__*/_jsxDEV(Chatroom, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 228,\n    columnNumber: 5\n  }, this);\n}\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"CREATE_HASH\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["io","useEffect","useState","BrowserRouter","Routes","Route","createHashRouter","useNavigate","useLocation","initializeApp","getAnalytics","get","getDatabase","ref","set","child","onValue","sha256","socket","connect","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","analytics","CREATE_HASH","password","hash","create","update","hex","App","ACCESS","Chatroom","MAX_SIZE","message","setMessage","messageRecv","setMessageRecv","state","username","sendMessage","updateScreen","emit","delete_first_node","parent","lst","first","removeChild","flag","LIST","document","getElementById","LI","createElement","innerHTML","count","children","bottom","getBoundingClientRect","appendChild","on","data","event","target","value","LoginScreen","navigate","typedUser","setUsername","typedPassword","setPassword","validateLogin","db","dbRef","snapshot","databaseResponse","val","databasePassword","attemptedPassword","alert"],"sources":["C:/Users/Owner/Desktop/COMP SCI/test_app/test_app/src/App.jsx"],"sourcesContent":["import './App.css';\nimport io from \"socket.io-client\"\nimport {useEffect, useState} from 'react'\nimport {BrowserRouter, Routes, Route, createHashRouter} from 'react-router-dom';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { get, getDatabase, ref, set, child, onValue } from \"firebase/database\";\nimport {sha256} from 'js-sha256'\nconst socket = io.connect(\"http://localhost:3001\")\n\n/* ######################## Firebase Setup ########################*/\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBUmj5104Hb8QA9yvCUv_dxk-76aTlhvB8\",\n  authDomain: \"willamettemajorchatroom.firebaseapp.com\",\n  projectId: \"willamettemajorchatroom\",\n  storageBucket: \"willamettemajorchatroom.appspot.com\",\n  messagingSenderId: \"1084318268943\",\n  appId: \"1:1084318268943:web:549f018da09d0c66f42d7a\",\n  measurementId: \"G-GEN5KBHKVJ\"\n};\nconst app = initializeApp(firebaseConfig);\nconst analytics = getAnalytics(app);\n\n/* sha256 hash function */\nfunction CREATE_HASH(password)\n{\n  var hash = sha256.create()\n  hash.update(password)\n  return hash.hex()\n}\n\n\nfunction App() {\n  var ACCESS = false\n\n  function Chatroom()\n{\n  const MAX_SIZE = 6;\n  const [message, setMessage] = useState(\"\");\n  const [messageRecv, setMessageRecv] = useState(\"\");\n  const {state} = useLocation()\n  const username = state.username\n\n  function sendMessage()\n  {\n    updateScreen(message, username, \"SENDER\");\n    socket.emit(\"SEND_MESSAGE\", { message, username });\n  }\n\n  function delete_first_node(parent, lst)\n  {\n    var first = lst[0];\n    parent.removeChild(first);\n  }\n\n\n  // Updates the chat list and colors based on sender and/ or receiver\n  function updateScreen(message, username, flag)\n  {\n    const LIST = document.getElementById(\"messageListId\");\n    var LI = document.createElement(\"li\");\n    LI.innerHTML = `[${username}] ${message}`;\n\n    var count = 0;\n    for (var child of LIST.children)\n    {\n      var bottom = child.getBoundingClientRect().bottom;\n      if (count++ >= MAX_SIZE || bottom >= 515)\n      {\n        delete_first_node(LIST, LIST.children)\n      }\n    }\n    \n\n    LIST.appendChild(LI);\n  }\n\n\n  useEffect(() => {\n    socket.on(\"RECEIVE_MESSAGE\", (data) => {\n      setMessageRecv(data.message);\n      updateScreen(data.message, data.username);\n    })\n  }, [socket])\n\n  return (\n    <>      \n    <div className='App'>\n        <div className=\"messageContainer\">\n            <ul className=\"messageListClass\" id=\"messageListId\"></ul>\n          </div>\n\n          <div className=\"messageBar\">\n            <input className=\"messageInputBar\" placeholder=\"Message...\" onChange={ (event) => {\n              setMessage(event.target.value);\n            }}></input>\n            <button className=\"sendButton\" onClick={sendMessage}>Send</button>\n        </div>\n    </div>\n    </>\n  )\n  }\n\n  function LoginScreen()\n  {\n    var navigate = useNavigate();\n    var [typedUser, setUsername] = useState(\"\");\n    var [typedPassword, setPassword] = useState(\"\");\n\n    function validateLogin()\n    {\n\n      /* Retrieve from database and validate login info */\n      const db = getDatabase(app)\n      const dbRef = ref(db, \"users/\" + typedUser)\n      onValue(dbRef, (snapshot) => {\n        const databaseResponse = snapshot.val()\n        if (databaseResponse)\n        {\n          var databasePassword = databaseResponse.password\n          const attemptedPassword = CREATE_HASH(typedPassword)\n          if (databasePassword === attemptedPassword)\n          {\n            ACCESS = true\n            navigate(\"/Chatroom\", { state: {username : typedUser }})\n          } else {\n            alert(\"Username or Password is incorrect\")\n          }\n        } else {\n          alert(\"Username or Password is incorrect\")\n        }\n      })\n      \n    }\n\n    return (\n      <>\n          <div className=\"usernameDiv\" id=\"usernameDivId\">\n              <input placeholder='Username' id=\"usernameInputId\" onChange={(event) => {\n                setUsername(event.target.value);\n              }} required></input>\n          </div>\n\n          <div className=\"passwordDiv\" id=\"passwordDivId\">\n              <input placeholder='Password' id=\"passwordInputId\" onChange={(event) => {\n                setPassword(event.target.value);\n              }} required></input>\n          </div>\n\n          <div className=\"signinDiv\" id=\"signinDivId\">\n            <button id=\"signinButtonId\" type='submit' onClick={() => {(!typedUser || !typedPassword) ? alert(\"Enter username/password\") : validateLogin()}}>Sign In</button>\n          </div>\n          \n          <div className=\"registerDiv\" id=\"registerDivId\">\n            <button id=\"registerButtonId\" onClick={() => {navigate(\"/register\")}}>Register</button>\n          </div>\n      </>\n\n    )\n  }\n\n/*\n  function Register()\n  {\n    var navigate = useNavigate();\n    var [registerUsername, setUsername] = useState(\"\")\n    var [registerPassword, setPassword] = useState(\"\")\n\n     createUser() pushes a username and password to the firebase database \n    function createUser() {\n      const db = getDatabase();\n      const dbRef = ref(db)\n\n       Retrieving user data and checking to see if the typed username already exists \n      get(child(dbRef, \"users\"))\n      .then((snapshot) => {\n\n          var users = []\n          snapshot.forEach(snap => {\n            var user = snap.val().username;\n            users.push(user)\n          })\n          \n          var access_token = true\n          users.map((user) => {\n            if (user == registerUsername)\n            {\n              access_token = false\n              alert(\"User already exists!\")\n            }\n          })\n\n          if (access_token)\n          {\n            var hashed_password = CREATE_HASH(registerPassword)\n            set(ref(db, 'users/' + registerUsername), {\n              username: registerUsername,\n              password: hashed_password\n            });\n            navigate(\"/\")\n          }\n          \n      })\n    }\n\n\n    return (\n      <>\n        <div className=\"usernameDiv\" id=\"registerUsernameDiv\">\n              <input placeholder='Username' onChange={(event) => {setUsername(event.target.value);}} required></input>\n          </div>\n\n          <div className=\"passwordDiv\" id=\"registerPasswordDivId\">\n              <input placeholder='Password' onChange={(event) => {setPassword(event.target.value);}} required></input>\n          </div>\n\n          <div className=\"signinDiv\" id=\"signinDivId\">\n            <button id=\"signinButtonId\" type='submit' onClick={() => {createUser()}}>Submit</button>\n        </div>\n      </>\n    )\n  }\n*/\n\n  \n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/\" element={<LoginScreen />} />\n        <Route path=\"/Chatroom\" element={<Chatroom />} />\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}